type Player {
	name: String! @id @search(by: [hash, regexp])
	clan: Clan
	playerInfos: [PlayerInfo] @hasInverse(field: player)
}

type Clan {
	name: String! @id @search(by: [hash, regexp])
	players: [Player] @hasInverse(field: clan)
	playersCount: Int
}

type Client {
	id: ID!
	player: Player!
	clan: Clan
	country: Int
	score: Int!
	ingame: Boolean!
	gameServer: GameServer!
}

type MasterServer {
	address: String! @id
	gameServers: [GameServer]
	downSince: DateTime
}

type GameServer {
	address: String! @id

	type: Int
	version: String
	name: String @search(by: [hash, regexp])

	map: Map

	numPlayers: Int
	maxPlayers: Int
	numClients: Int
	maxClients: Int

	clients: [Client] @hasInverse(field: gameServer)
	masterServers: [MasterServer] @hasInverse(field: gameServers)
}

type PlayerInfo {
	id: ID!
	player: Player
	map: Map
	score: Float
}

type Map {
	id: ID!
	name: String @search(by: [hash])
	gameType: GameType
	playerInfos: [PlayerInfo] @hasInverse(field: map)
	gameServers: [GameServer] @hasInverse(field: map)
}

type GameType {
	id: ID!
	name: String @search(by: [hash])
	maps: [Map] @hasInverse(field: gameType)
}
