generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model MasterServer {
  id          Int          @id @default(autoincrement())
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  address     String
  port        Int
  gameServers GameServer[]

  @@unique([address, port])
}

model GameServer {
  id           Int       @id @default(autoincrement())
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  offlineSince DateTime?

  ip   String
  port Int

  masterServer   MasterServer @relation(fields: [masterServerId], references: [id])
  masterServerId Int

  snapshots GameServerSnapshot[]

  @@unique([ip, port])
  @@index([masterServerId])
}

model Player {
  name      String   @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  ratings PlayerRating[]

  gameServerClients GameServerClient[]
}

enum RankMethod {
  ELO
}

model GameType {
  name       String      @id
  createdAt  DateTime    @default(now())
  map        Map[]
  rankMethod RankMethod?
}

model Map {
  id        Int      @id @default(autoincrement())
  name      String?
  createdAt DateTime @default(now())

  gameType     GameType @relation(fields: [gameTypeName], references: [name])
  gameTypeName String

  snapshots     GameServerSnapshot[]
  playerRatings PlayerRating[]

  @@unique([name, gameTypeName])
  @@index([gameTypeName])
}

model PlayerRating {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  player     Player @relation(fields: [playerName], references: [name])
  playerName String

  map   Map @relation(fields: [mapId], references: [id])
  mapId Int

  rating Float

  @@unique([playerName, mapId])
  @@map("PlayerRatings")
  @@index([mapId])
  @@index([playerName])
}

model GameServerClient {
  id Int @id @default(autoincrement())

  snapshot   GameServerSnapshot @relation(fields: [snapshotId], references: [id])
  snapshotId Int

  player     Player @relation(fields: [playerName], references: [name])
  playerName String

  clan    String
  score   Int
  country Int
  inGame  Boolean

  @@index([snapshotId])
  @@index([playerName])
}

model GameServerSnapshot {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  rankedAt  DateTime?

  version String
  name    String
  map     Map    @relation(fields: [mapId], references: [id])
  mapId   Int

  numPlayers Int
  maxPlayers Int

  numClients Int
  maxClients Int

  clients GameServerClient[]

  gameServer   GameServer @relation(fields: [gameServerId], references: [id])
  gameServerId Int

  @@index([gameServerId])
  @@index([mapId])
}
