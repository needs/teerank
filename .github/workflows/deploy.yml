name: CI
on:
  push:
    branches:
      - rework
  pull_request:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres-test
          POSTGRES_PASSWORD: postgres-test
          POSTGRES_DB: teerank-test
        ports:
          - 5433:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npx nx run-many -t lint --parallel=3

      - name: Prisma Generate
        run: npx nx run-many -t prisma-generate --parallel=3

      - name: Migrate database
        run: npx nx run-many -t prisma-deploy --parallel=3
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

      - name: Build
        run: npx nx run-many -t build --parallel=3
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

      - name: Test
        run: npx nx run-many -t test --runInBand

      - uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy frontend
        run: flyctl deploy --config apps/frontend/fly.toml --dockerfile apps/frontend/Dockerfile
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN_FRONTEND }}

      - name: Deploy backend
        run: flyctl deploy --config apps/backend/fly.toml --dockerfile apps/backend/Dockerfile
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN_BACKEND }}
